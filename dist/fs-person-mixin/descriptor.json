{"schema_version":"1.0.0","mixins":[{"description":"`fs-person-mixin`\n\nHelps elements retrieve and manage person data from the FamilySearch API","summary":"","path":"../../fs-person-mixin.html","properties":[{"name":"personId","type":"string","description":"Person ID","privacy":"public","sourceRange":{"start":{"line":18,"column":8},"end":{"line":23,"column":9}},"metadata":{"polymer":{"notify":true,"observer":"\"_idChanged\""}}},{"name":"person","type":"Object","description":"Person data","privacy":"public","sourceRange":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"metadata":{"polymer":{"notify":true,"observer":"\"_personChanged\""}}},{"name":"personRequested","type":"boolean","description":"Whether the person has been requested","privacy":"public","sourceRange":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"metadata":{"polymer":{"notify":true,"readOnly":true}},"defaultValue":"false"},{"name":"personLoading","type":"boolean","description":"Whether the person is currently being requested from the API","privacy":"public","sourceRange":{"start":{"line":41,"column":8},"end":{"line":46,"column":9}},"metadata":{"polymer":{"notify":true,"readOnly":true}},"defaultValue":"false"},{"name":"_personRequest","type":"Object","description":"An fs-request instance","privacy":"protected","sourceRange":{"start":{"line":49,"column":8},"end":{"line":49,"column":30}},"metadata":{"polymer":{}}}],"methods":[{"name":"_setupRequest","description":"","privacy":"protected","sourceRange":{"start":{"line":53,"column":4},"end":{"line":85,"column":5}},"metadata":{},"params":[]},{"name":"loadPerson","description":"","privacy":"public","sourceRange":{"start":{"line":87,"column":4},"end":{"line":101,"column":5}},"metadata":{},"params":[]},{"name":"reset","description":"Clear the personId and person and reset\nthe element to its default state","privacy":"public","sourceRange":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"metadata":{},"params":[]},{"name":"_authenticatedChanged","description":"usually have a client that emits this event?","privacy":"protected","sourceRange":{"start":{"line":113,"column":4},"end":{"line":117,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_idChanged","description":"Update the state when appropriate. It's not as simple as we would want it\nto be because we're trying to keep the personId and person in sync while\nallowing either of them to change. If the personId changes we want to request\na new person; if the person changes we want to update the personId. But\nif a personId and person are already set, then we change the person and\nupdate the personId, we don't want to clear the person and request them again.","privacy":"protected","sourceRange":{"start":{"line":127,"column":4},"end":{"line":145,"column":5}},"metadata":{},"params":[]},{"name":"_personChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":147,"column":4},"end":{"line":151,"column":5}},"metadata":{},"params":[]}],"staticMethods":[],"demos":[],"metadata":{},"sourceRange":{"start":{"line":13,"column":2},"end":{"line":152,"column":5}},"privacy":"public","name":"FSPersonMixin","attributes":[{"name":"person-id","description":"Person ID","sourceRange":{"start":{"line":18,"column":8},"end":{"line":23,"column":9}},"metadata":{},"type":"string"},{"name":"person","description":"Person data","sourceRange":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"metadata":{},"type":"Object"},{"name":"person-requested","description":"Whether the person has been requested","sourceRange":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"metadata":{},"type":"boolean"},{"name":"person-loading","description":"Whether the person is currently being requested from the API","sourceRange":{"start":{"line":41,"column":8},"end":{"line":46,"column":9}},"metadata":{},"type":"boolean"}],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[]}]}